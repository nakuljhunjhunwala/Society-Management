name: Deploy to Oracle Cloud

on:
  workflow_dispatch:  # This triggers the workflow manually

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t myapp:latest .

      - name: Save Docker image
        run: |
          docker save myapp:latest -o myapp.tar

      - name: Copy .env file to server
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
        run: |
          echo "$ENV_FILE_CONTENT" > .env
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem .env ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu/

      - name: Copy Docker image to server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem myapp.tar ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu/

      - name: Copy docker-compose.yml to server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem docker-compose.yml ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu/

      - name: Deploy Docker container
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
            # Load Docker image
            docker load -i myapp.tar

            # Remove existing containers if any (optional)
            docker-compose down

            # Start the application
            docker-compose up -d --build
          EOF
