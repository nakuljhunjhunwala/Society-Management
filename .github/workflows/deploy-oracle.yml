name: Deploy to Oracle Cloud

on:
  workflow_dispatch:  # This triggers the workflow manually

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Create .env file
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}
        run: |
          echo "$ENV_FILE_CONTENT" > .env

      - name: Build Docker image
        run: |
          docker buildx build --platform linux/arm64 -t society-management:latest --load --progress=plain .

      - name: Save Docker image
        run: |
          docker save society-management:latest -o society-management.tar

      - name: Copy .env file to server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem .env ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu/

      - name: Copy Docker image to server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem society-management.tar ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu/

      - name: Copy docker-compose.yml to server
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem docker-compose.yml ubuntu@${{ secrets.SERVER_IP }}:/home/ubuntu/

      - name: Deploy Docker container
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem ubuntu@${{ secrets.SERVER_IP }} << 'EOF'
            # Stop and remove old containers and images
            docker-compose down
            
            # Remove the specific application image
            docker rmi society-management:latest
            
            # Load the new Docker image
            docker load -i society-management.tar

            # Start the application with the new .env
            docker-compose up -d --build
            
            # Clean up temporary files
            rm -f society-management.tar .env
          EOF
