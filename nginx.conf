events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Define the rate limit zone globally in the http block
    limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;

    # HTTP server block for Let's Encrypt verification
    server {
        listen 80;
        server_name sociocircle.work.gd 146.56.51.212;

        # Let's Encrypt challenge location
        location /.well-known/acme-challenge/ {
            root /etc/letsencrypt;
        }

        # Redirect all other HTTP traffic to HTTPS
        location / {
            limit_req zone=one burst=10 nodelay;
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block for the main application
    server {
        listen 443 ssl;
        server_name sociocircle.work.gd;

        # SSL certificates for the server
        ssl_certificate /etc/letsencrypt/live/sociocircle.work.gd/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/sociocircle.work.gd/privkey.pem;

        # SSL configuration for secure connections
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'HIGH:!aNULL:!MD5:!RC4';
        ssl_prefer_server_ciphers on;

        # Main application location with rate limiting
        location / {
            limit_req zone=one burst=10 nodelay;
            proxy_pass http://society-management:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
